#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="REET")]
public partial class LQDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertuser_detail(user_detail instance);
  partial void Updateuser_detail(user_detail instance);
  partial void Deleteuser_detail(user_detail instance);
  partial void Insertcart_detail(cart_detail instance);
  partial void Updatecart_detail(cart_detail instance);
  partial void Deletecart_detail(cart_detail instance);
  partial void Insertcategory_name(category_name instance);
  partial void Updatecategory_name(category_name instance);
  partial void Deletecategory_name(category_name instance);
  partial void Insertcategory_product_detail(category_product_detail instance);
  partial void Updatecategory_product_detail(category_product_detail instance);
  partial void Deletecategory_product_detail(category_product_detail instance);
  partial void Insertcustomer_cart_time(customer_cart_time instance);
  partial void Updatecustomer_cart_time(customer_cart_time instance);
  partial void Deletecustomer_cart_time(customer_cart_time instance);
  partial void Insertcustomer_detail(customer_detail instance);
  partial void Updatecustomer_detail(customer_detail instance);
  partial void Deletecustomer_detail(customer_detail instance);
  partial void Insertproduct_image(product_image instance);
  partial void Updateproduct_image(product_image instance);
  partial void Deleteproduct_image(product_image instance);
  partial void Insertuser_category(user_category instance);
  partial void Updateuser_category(user_category instance);
  partial void Deleteuser_category(user_category instance);
  #endregion
	
	public LQDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["REETConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public LQDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LQDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<banner> banners
	{
		get
		{
			return this.GetTable<banner>();
		}
	}
	
	public System.Data.Linq.Table<user_detail> user_details
	{
		get
		{
			return this.GetTable<user_detail>();
		}
	}
	
	public System.Data.Linq.Table<cart_detail> cart_details
	{
		get
		{
			return this.GetTable<cart_detail>();
		}
	}
	
	public System.Data.Linq.Table<category_name> category_names
	{
		get
		{
			return this.GetTable<category_name>();
		}
	}
	
	public System.Data.Linq.Table<category_product_detail> category_product_details
	{
		get
		{
			return this.GetTable<category_product_detail>();
		}
	}
	
	public System.Data.Linq.Table<customer_cart_time> customer_cart_times
	{
		get
		{
			return this.GetTable<customer_cart_time>();
		}
	}
	
	public System.Data.Linq.Table<customer_detail> customer_details
	{
		get
		{
			return this.GetTable<customer_detail>();
		}
	}
	
	public System.Data.Linq.Table<product_image> product_images
	{
		get
		{
			return this.GetTable<product_image>();
		}
	}
	
	public System.Data.Linq.Table<user_category> user_categories
	{
		get
		{
			return this.GetTable<user_category>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.banner")]
public partial class banner
{
	
	private int _banner_id;
	
	private string _banner_image;
	
	public banner()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_banner_id", DbType="Int NOT NULL")]
	public int banner_id
	{
		get
		{
			return this._banner_id;
		}
		set
		{
			if ((this._banner_id != value))
			{
				this._banner_id = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_banner_image", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string banner_image
	{
		get
		{
			return this._banner_image;
		}
		set
		{
			if ((this._banner_image != value))
			{
				this._banner_image = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_detail")]
public partial class user_detail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _user_cat_id;
	
	private int _user_id;
	
	private string _user_email;
	
	private string _user_fullname;
	
	private string _user_name;
	
	private string _user_password;
	
	private System.Nullable<int> _user_age;
	
	private string _user_pro_image;
	
	private EntityRef<user_category> _user_category;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_cat_idChanging(int value);
    partial void Onuser_cat_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onuser_emailChanging(string value);
    partial void Onuser_emailChanged();
    partial void Onuser_fullnameChanging(string value);
    partial void Onuser_fullnameChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onuser_passwordChanging(string value);
    partial void Onuser_passwordChanged();
    partial void Onuser_ageChanging(System.Nullable<int> value);
    partial void Onuser_ageChanged();
    partial void Onuser_pro_imageChanging(string value);
    partial void Onuser_pro_imageChanged();
    #endregion
	
	public user_detail()
	{
		this._user_category = default(EntityRef<user_category>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_cat_id", DbType="Int NOT NULL")]
	public int user_cat_id
	{
		get
		{
			return this._user_cat_id;
		}
		set
		{
			if ((this._user_cat_id != value))
			{
				if (this._user_category.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_cat_idChanging(value);
				this.SendPropertyChanging();
				this._user_cat_id = value;
				this.SendPropertyChanged("user_cat_id");
				this.Onuser_cat_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string user_email
	{
		get
		{
			return this._user_email;
		}
		set
		{
			if ((this._user_email != value))
			{
				this.Onuser_emailChanging(value);
				this.SendPropertyChanging();
				this._user_email = value;
				this.SendPropertyChanged("user_email");
				this.Onuser_emailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_fullname", DbType="NVarChar(20)")]
	public string user_fullname
	{
		get
		{
			return this._user_fullname;
		}
		set
		{
			if ((this._user_fullname != value))
			{
				this.Onuser_fullnameChanging(value);
				this.SendPropertyChanging();
				this._user_fullname = value;
				this.SendPropertyChanged("user_fullname");
				this.Onuser_fullnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string user_name
	{
		get
		{
			return this._user_name;
		}
		set
		{
			if ((this._user_name != value))
			{
				this.Onuser_nameChanging(value);
				this.SendPropertyChanging();
				this._user_name = value;
				this.SendPropertyChanged("user_name");
				this.Onuser_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_password", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
	public string user_password
	{
		get
		{
			return this._user_password;
		}
		set
		{
			if ((this._user_password != value))
			{
				this.Onuser_passwordChanging(value);
				this.SendPropertyChanging();
				this._user_password = value;
				this.SendPropertyChanged("user_password");
				this.Onuser_passwordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_age", DbType="Int")]
	public System.Nullable<int> user_age
	{
		get
		{
			return this._user_age;
		}
		set
		{
			if ((this._user_age != value))
			{
				this.Onuser_ageChanging(value);
				this.SendPropertyChanging();
				this._user_age = value;
				this.SendPropertyChanged("user_age");
				this.Onuser_ageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_pro_image", DbType="NVarChar(50)")]
	public string user_pro_image
	{
		get
		{
			return this._user_pro_image;
		}
		set
		{
			if ((this._user_pro_image != value))
			{
				this.Onuser_pro_imageChanging(value);
				this.SendPropertyChanging();
				this._user_pro_image = value;
				this.SendPropertyChanged("user_pro_image");
				this.Onuser_pro_imageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_category_user_detail", Storage="_user_category", ThisKey="user_cat_id", OtherKey="user_cat_id", IsForeignKey=true)]
	public user_category user_category
	{
		get
		{
			return this._user_category.Entity;
		}
		set
		{
			user_category previousValue = this._user_category.Entity;
			if (((previousValue != value) 
						|| (this._user_category.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._user_category.Entity = null;
					previousValue.user_details.Remove(this);
				}
				this._user_category.Entity = value;
				if ((value != null))
				{
					value.user_details.Add(this);
					this._user_cat_id = value.user_cat_id;
				}
				else
				{
					this._user_cat_id = default(int);
				}
				this.SendPropertyChanged("user_category");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cart_detail")]
public partial class cart_detail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id_dtcart;
	
	private int _id_cart;
	
	private int _id_pro;
	
	private int _quantity;
	
	private System.Nullable<double> _total_price;
	
	private EntityRef<category_product_detail> _category_product_detail;
	
	private EntityRef<customer_cart_time> _customer_cart_time;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_dtcartChanging(int value);
    partial void Onid_dtcartChanged();
    partial void Onid_cartChanging(int value);
    partial void Onid_cartChanged();
    partial void Onid_proChanging(int value);
    partial void Onid_proChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void Ontotal_priceChanging(System.Nullable<double> value);
    partial void Ontotal_priceChanged();
    #endregion
	
	public cart_detail()
	{
		this._category_product_detail = default(EntityRef<category_product_detail>);
		this._customer_cart_time = default(EntityRef<customer_cart_time>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_dtcart", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id_dtcart
	{
		get
		{
			return this._id_dtcart;
		}
		set
		{
			if ((this._id_dtcart != value))
			{
				this.Onid_dtcartChanging(value);
				this.SendPropertyChanging();
				this._id_dtcart = value;
				this.SendPropertyChanged("id_dtcart");
				this.Onid_dtcartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cart", DbType="Int NOT NULL")]
	public int id_cart
	{
		get
		{
			return this._id_cart;
		}
		set
		{
			if ((this._id_cart != value))
			{
				if (this._customer_cart_time.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onid_cartChanging(value);
				this.SendPropertyChanging();
				this._id_cart = value;
				this.SendPropertyChanged("id_cart");
				this.Onid_cartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pro", DbType="Int NOT NULL")]
	public int id_pro
	{
		get
		{
			return this._id_pro;
		}
		set
		{
			if ((this._id_pro != value))
			{
				if (this._category_product_detail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onid_proChanging(value);
				this.SendPropertyChanging();
				this._id_pro = value;
				this.SendPropertyChanged("id_pro");
				this.Onid_proChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
	public int quantity
	{
		get
		{
			return this._quantity;
		}
		set
		{
			if ((this._quantity != value))
			{
				this.OnquantityChanging(value);
				this.SendPropertyChanging();
				this._quantity = value;
				this.SendPropertyChanged("quantity");
				this.OnquantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_price", DbType="Float")]
	public System.Nullable<double> total_price
	{
		get
		{
			return this._total_price;
		}
		set
		{
			if ((this._total_price != value))
			{
				this.Ontotal_priceChanging(value);
				this.SendPropertyChanging();
				this._total_price = value;
				this.SendPropertyChanged("total_price");
				this.Ontotal_priceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_product_detail_cart_detail", Storage="_category_product_detail", ThisKey="id_pro", OtherKey="id_pro", IsForeignKey=true)]
	public category_product_detail category_product_detail
	{
		get
		{
			return this._category_product_detail.Entity;
		}
		set
		{
			category_product_detail previousValue = this._category_product_detail.Entity;
			if (((previousValue != value) 
						|| (this._category_product_detail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._category_product_detail.Entity = null;
					previousValue.cart_details.Remove(this);
				}
				this._category_product_detail.Entity = value;
				if ((value != null))
				{
					value.cart_details.Add(this);
					this._id_pro = value.id_pro;
				}
				else
				{
					this._id_pro = default(int);
				}
				this.SendPropertyChanged("category_product_detail");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_cart_time_cart_detail", Storage="_customer_cart_time", ThisKey="id_cart", OtherKey="id_cart", IsForeignKey=true)]
	public customer_cart_time customer_cart_time
	{
		get
		{
			return this._customer_cart_time.Entity;
		}
		set
		{
			customer_cart_time previousValue = this._customer_cart_time.Entity;
			if (((previousValue != value) 
						|| (this._customer_cart_time.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._customer_cart_time.Entity = null;
					previousValue.cart_details.Remove(this);
				}
				this._customer_cart_time.Entity = value;
				if ((value != null))
				{
					value.cart_details.Add(this);
					this._id_cart = value.id_cart;
				}
				else
				{
					this._id_cart = default(int);
				}
				this.SendPropertyChanged("customer_cart_time");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.category_name")]
public partial class category_name : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id_cat;
	
	private string _cat_name;
	
	private EntitySet<category_product_detail> _category_product_details;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_catChanging(int value);
    partial void Onid_catChanged();
    partial void Oncat_nameChanging(string value);
    partial void Oncat_nameChanged();
    #endregion
	
	public category_name()
	{
		this._category_product_details = new EntitySet<category_product_detail>(new Action<category_product_detail>(this.attach_category_product_details), new Action<category_product_detail>(this.detach_category_product_details));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id_cat
	{
		get
		{
			return this._id_cat;
		}
		set
		{
			if ((this._id_cat != value))
			{
				this.Onid_catChanging(value);
				this.SendPropertyChanging();
				this._id_cat = value;
				this.SendPropertyChanged("id_cat");
				this.Onid_catChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_name", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
	public string cat_name
	{
		get
		{
			return this._cat_name;
		}
		set
		{
			if ((this._cat_name != value))
			{
				this.Oncat_nameChanging(value);
				this.SendPropertyChanging();
				this._cat_name = value;
				this.SendPropertyChanged("cat_name");
				this.Oncat_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_name_category_product_detail", Storage="_category_product_details", ThisKey="id_cat", OtherKey="id_cat")]
	public EntitySet<category_product_detail> category_product_details
	{
		get
		{
			return this._category_product_details;
		}
		set
		{
			this._category_product_details.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_category_product_details(category_product_detail entity)
	{
		this.SendPropertyChanging();
		entity.category_name = this;
	}
	
	private void detach_category_product_details(category_product_detail entity)
	{
		this.SendPropertyChanging();
		entity.category_name = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.category_product_detail")]
public partial class category_product_detail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id_cat;
	
	private int _id_pro;
	
	private string _pro_name;
	
	private double _pro_price;
	
	private EntitySet<cart_detail> _cart_details;
	
	private EntitySet<product_image> _product_images;
	
	private EntityRef<category_name> _category_name;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_catChanging(int value);
    partial void Onid_catChanged();
    partial void Onid_proChanging(int value);
    partial void Onid_proChanged();
    partial void Onpro_nameChanging(string value);
    partial void Onpro_nameChanged();
    partial void Onpro_priceChanging(double value);
    partial void Onpro_priceChanged();
    #endregion
	
	public category_product_detail()
	{
		this._cart_details = new EntitySet<cart_detail>(new Action<cart_detail>(this.attach_cart_details), new Action<cart_detail>(this.detach_cart_details));
		this._product_images = new EntitySet<product_image>(new Action<product_image>(this.attach_product_images), new Action<product_image>(this.detach_product_images));
		this._category_name = default(EntityRef<category_name>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cat", DbType="Int NOT NULL")]
	public int id_cat
	{
		get
		{
			return this._id_cat;
		}
		set
		{
			if ((this._id_cat != value))
			{
				if (this._category_name.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onid_catChanging(value);
				this.SendPropertyChanging();
				this._id_cat = value;
				this.SendPropertyChanged("id_cat");
				this.Onid_catChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id_pro
	{
		get
		{
			return this._id_pro;
		}
		set
		{
			if ((this._id_pro != value))
			{
				this.Onid_proChanging(value);
				this.SendPropertyChanging();
				this._id_pro = value;
				this.SendPropertyChanged("id_pro");
				this.Onid_proChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pro_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string pro_name
	{
		get
		{
			return this._pro_name;
		}
		set
		{
			if ((this._pro_name != value))
			{
				this.Onpro_nameChanging(value);
				this.SendPropertyChanging();
				this._pro_name = value;
				this.SendPropertyChanged("pro_name");
				this.Onpro_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pro_price", DbType="Float NOT NULL")]
	public double pro_price
	{
		get
		{
			return this._pro_price;
		}
		set
		{
			if ((this._pro_price != value))
			{
				this.Onpro_priceChanging(value);
				this.SendPropertyChanging();
				this._pro_price = value;
				this.SendPropertyChanged("pro_price");
				this.Onpro_priceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_product_detail_cart_detail", Storage="_cart_details", ThisKey="id_pro", OtherKey="id_pro")]
	public EntitySet<cart_detail> cart_details
	{
		get
		{
			return this._cart_details;
		}
		set
		{
			this._cart_details.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_product_detail_product_image", Storage="_product_images", ThisKey="id_pro", OtherKey="id_prod")]
	public EntitySet<product_image> product_images
	{
		get
		{
			return this._product_images;
		}
		set
		{
			this._product_images.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_name_category_product_detail", Storage="_category_name", ThisKey="id_cat", OtherKey="id_cat", IsForeignKey=true)]
	public category_name category_name
	{
		get
		{
			return this._category_name.Entity;
		}
		set
		{
			category_name previousValue = this._category_name.Entity;
			if (((previousValue != value) 
						|| (this._category_name.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._category_name.Entity = null;
					previousValue.category_product_details.Remove(this);
				}
				this._category_name.Entity = value;
				if ((value != null))
				{
					value.category_product_details.Add(this);
					this._id_cat = value.id_cat;
				}
				else
				{
					this._id_cat = default(int);
				}
				this.SendPropertyChanged("category_name");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_cart_details(cart_detail entity)
	{
		this.SendPropertyChanging();
		entity.category_product_detail = this;
	}
	
	private void detach_cart_details(cart_detail entity)
	{
		this.SendPropertyChanging();
		entity.category_product_detail = null;
	}
	
	private void attach_product_images(product_image entity)
	{
		this.SendPropertyChanging();
		entity.category_product_detail = this;
	}
	
	private void detach_product_images(product_image entity)
	{
		this.SendPropertyChanging();
		entity.category_product_detail = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer_cart_time")]
public partial class customer_cart_time : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id_cart;
	
	private int _id_cus;
	
	private System.Nullable<System.DateTime> _time_cart;
	
	private EntitySet<cart_detail> _cart_details;
	
	private EntityRef<customer_detail> _customer_detail;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_cartChanging(int value);
    partial void Onid_cartChanged();
    partial void Onid_cusChanging(int value);
    partial void Onid_cusChanged();
    partial void Ontime_cartChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_cartChanged();
    #endregion
	
	public customer_cart_time()
	{
		this._cart_details = new EntitySet<cart_detail>(new Action<cart_detail>(this.attach_cart_details), new Action<cart_detail>(this.detach_cart_details));
		this._customer_detail = default(EntityRef<customer_detail>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cart", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id_cart
	{
		get
		{
			return this._id_cart;
		}
		set
		{
			if ((this._id_cart != value))
			{
				this.Onid_cartChanging(value);
				this.SendPropertyChanging();
				this._id_cart = value;
				this.SendPropertyChanged("id_cart");
				this.Onid_cartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cus", DbType="Int NOT NULL")]
	public int id_cus
	{
		get
		{
			return this._id_cus;
		}
		set
		{
			if ((this._id_cus != value))
			{
				if (this._customer_detail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onid_cusChanging(value);
				this.SendPropertyChanging();
				this._id_cus = value;
				this.SendPropertyChanged("id_cus");
				this.Onid_cusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_cart", DbType="Date")]
	public System.Nullable<System.DateTime> time_cart
	{
		get
		{
			return this._time_cart;
		}
		set
		{
			if ((this._time_cart != value))
			{
				this.Ontime_cartChanging(value);
				this.SendPropertyChanging();
				this._time_cart = value;
				this.SendPropertyChanged("time_cart");
				this.Ontime_cartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_cart_time_cart_detail", Storage="_cart_details", ThisKey="id_cart", OtherKey="id_cart")]
	public EntitySet<cart_detail> cart_details
	{
		get
		{
			return this._cart_details;
		}
		set
		{
			this._cart_details.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_detail_customer_cart_time", Storage="_customer_detail", ThisKey="id_cus", OtherKey="id_cus", IsForeignKey=true)]
	public customer_detail customer_detail
	{
		get
		{
			return this._customer_detail.Entity;
		}
		set
		{
			customer_detail previousValue = this._customer_detail.Entity;
			if (((previousValue != value) 
						|| (this._customer_detail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._customer_detail.Entity = null;
					previousValue.customer_cart_times.Remove(this);
				}
				this._customer_detail.Entity = value;
				if ((value != null))
				{
					value.customer_cart_times.Add(this);
					this._id_cus = value.id_cus;
				}
				else
				{
					this._id_cus = default(int);
				}
				this.SendPropertyChanged("customer_detail");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_cart_details(cart_detail entity)
	{
		this.SendPropertyChanging();
		entity.customer_cart_time = this;
	}
	
	private void detach_cart_details(cart_detail entity)
	{
		this.SendPropertyChanging();
		entity.customer_cart_time = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer_detail")]
public partial class customer_detail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id_cus;
	
	private string _cus_name;
	
	private string _email;
	
	private EntitySet<customer_cart_time> _customer_cart_times;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_cusChanging(int value);
    partial void Onid_cusChanged();
    partial void Oncus_nameChanging(string value);
    partial void Oncus_nameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
	
	public customer_detail()
	{
		this._customer_cart_times = new EntitySet<customer_cart_time>(new Action<customer_cart_time>(this.attach_customer_cart_times), new Action<customer_cart_time>(this.detach_customer_cart_times));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cus", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id_cus
	{
		get
		{
			return this._id_cus;
		}
		set
		{
			if ((this._id_cus != value))
			{
				this.Onid_cusChanging(value);
				this.SendPropertyChanging();
				this._id_cus = value;
				this.SendPropertyChanged("id_cus");
				this.Onid_cusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string cus_name
	{
		get
		{
			return this._cus_name;
		}
		set
		{
			if ((this._cus_name != value))
			{
				this.Oncus_nameChanging(value);
				this.SendPropertyChanging();
				this._cus_name = value;
				this.SendPropertyChanged("cus_name");
				this.Oncus_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_detail_customer_cart_time", Storage="_customer_cart_times", ThisKey="id_cus", OtherKey="id_cus")]
	public EntitySet<customer_cart_time> customer_cart_times
	{
		get
		{
			return this._customer_cart_times;
		}
		set
		{
			this._customer_cart_times.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_customer_cart_times(customer_cart_time entity)
	{
		this.SendPropertyChanging();
		entity.customer_detail = this;
	}
	
	private void detach_customer_cart_times(customer_cart_time entity)
	{
		this.SendPropertyChanging();
		entity.customer_detail = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product_image")]
public partial class product_image : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id_img;
	
	private int _id_prod;
	
	private string _img_url;
	
	private System.Nullable<int> _sub_img;
	
	private EntityRef<category_product_detail> _category_product_detail;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_imgChanging(int value);
    partial void Onid_imgChanged();
    partial void Onid_prodChanging(int value);
    partial void Onid_prodChanged();
    partial void Onimg_urlChanging(string value);
    partial void Onimg_urlChanged();
    partial void Onsub_imgChanging(System.Nullable<int> value);
    partial void Onsub_imgChanged();
    #endregion
	
	public product_image()
	{
		this._category_product_detail = default(EntityRef<category_product_detail>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_img", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id_img
	{
		get
		{
			return this._id_img;
		}
		set
		{
			if ((this._id_img != value))
			{
				this.Onid_imgChanging(value);
				this.SendPropertyChanging();
				this._id_img = value;
				this.SendPropertyChanged("id_img");
				this.Onid_imgChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_prod", DbType="Int NOT NULL")]
	public int id_prod
	{
		get
		{
			return this._id_prod;
		}
		set
		{
			if ((this._id_prod != value))
			{
				if (this._category_product_detail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onid_prodChanging(value);
				this.SendPropertyChanging();
				this._id_prod = value;
				this.SendPropertyChanged("id_prod");
				this.Onid_prodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_url", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string img_url
	{
		get
		{
			return this._img_url;
		}
		set
		{
			if ((this._img_url != value))
			{
				this.Onimg_urlChanging(value);
				this.SendPropertyChanging();
				this._img_url = value;
				this.SendPropertyChanged("img_url");
				this.Onimg_urlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_img", DbType="Int")]
	public System.Nullable<int> sub_img
	{
		get
		{
			return this._sub_img;
		}
		set
		{
			if ((this._sub_img != value))
			{
				this.Onsub_imgChanging(value);
				this.SendPropertyChanging();
				this._sub_img = value;
				this.SendPropertyChanged("sub_img");
				this.Onsub_imgChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_product_detail_product_image", Storage="_category_product_detail", ThisKey="id_prod", OtherKey="id_pro", IsForeignKey=true)]
	public category_product_detail category_product_detail
	{
		get
		{
			return this._category_product_detail.Entity;
		}
		set
		{
			category_product_detail previousValue = this._category_product_detail.Entity;
			if (((previousValue != value) 
						|| (this._category_product_detail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._category_product_detail.Entity = null;
					previousValue.product_images.Remove(this);
				}
				this._category_product_detail.Entity = value;
				if ((value != null))
				{
					value.product_images.Add(this);
					this._id_prod = value.id_pro;
				}
				else
				{
					this._id_prod = default(int);
				}
				this.SendPropertyChanged("category_product_detail");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_category")]
public partial class user_category : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _user_cat_id;
	
	private string _user_cat_name;
	
	private EntitySet<user_detail> _user_details;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_cat_idChanging(int value);
    partial void Onuser_cat_idChanged();
    partial void Onuser_cat_nameChanging(string value);
    partial void Onuser_cat_nameChanged();
    #endregion
	
	public user_category()
	{
		this._user_details = new EntitySet<user_detail>(new Action<user_detail>(this.attach_user_details), new Action<user_detail>(this.detach_user_details));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_cat_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int user_cat_id
	{
		get
		{
			return this._user_cat_id;
		}
		set
		{
			if ((this._user_cat_id != value))
			{
				this.Onuser_cat_idChanging(value);
				this.SendPropertyChanging();
				this._user_cat_id = value;
				this.SendPropertyChanged("user_cat_id");
				this.Onuser_cat_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_cat_name", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string user_cat_name
	{
		get
		{
			return this._user_cat_name;
		}
		set
		{
			if ((this._user_cat_name != value))
			{
				this.Onuser_cat_nameChanging(value);
				this.SendPropertyChanging();
				this._user_cat_name = value;
				this.SendPropertyChanged("user_cat_name");
				this.Onuser_cat_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_category_user_detail", Storage="_user_details", ThisKey="user_cat_id", OtherKey="user_cat_id")]
	public EntitySet<user_detail> user_details
	{
		get
		{
			return this._user_details;
		}
		set
		{
			this._user_details.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_user_details(user_detail entity)
	{
		this.SendPropertyChanging();
		entity.user_category = this;
	}
	
	private void detach_user_details(user_detail entity)
	{
		this.SendPropertyChanging();
		entity.user_category = null;
	}
}
#pragma warning restore 1591
